version: "3.8"

x-logging: &default-logging
  driver: json-file
  options:
    max-size: "100m" 
    max-file: "100"   

services:
  frontend-switchboard:
    container_name: frontend-switchboard
    restart: always 
    image: hs60/switchboard-frontend:${FRONTEND_IMAGE_TAG}
    logging: *default-logging  
    network_mode: "host"
    # command: ["/bin/bash", "-c", "mkdir /etc/nginx/conf.d/"] 
    env_file:
      - .env 
    volumes:
     - ./uploads:/usr/share/nginx/html/application-files
     - /var/run/docker.sock:/var/run/docker.sock
    #  - ./nginx/:/etc/nginx/conf.d/

  backend-switchboard:
    container_name: backend-switchboard
    image: hs60/switchboard-backend:${BACKEND_IMAGE_TAG}
    env_file:
      - .env
    volumes:
      - ./uploads:/usr/src/app/uploads
      - /var/run/docker.sock:/var/run/docker.sock
      # - ./docker-compose.yaml:/usr/src/app/docker-compose.yaml
    restart: always  
    logging: *default-logging
    # command: ["/bin/sh", "/usr/src/app/update-agent.sh"]
    network_mode: "host"
#     depends_on:
#       - postgres_db

  switchboard-update:
    container_name: switchboard-update
    restart: always 
    image:  hs60/switchboard-cron-job:latest
    logging: *default-logging  
    network_mode: "host"
    ports: 
      - 4000:4000
    # command: ["/bin/sh", "apt-get install jq -y"]
    # command:
    #   - /bin/sh
    #   - -c
    #   - |
    #     apt-get install jq -y
    volumes:
     - /var/run/docker.sock:/var/run/docker.sock
     - ./docker-compose.yaml:/usr/local/bin/docker-compose.yaml
     - ./docker-update-logs.log:/var/log/update-agent.log
     - ./.env:/usr/local/bin/.env
     - ./update-agent.sh:/usr/local/bin/update-agent.sh


#   postgres_db:
#     image: postgres:16.3
#     container_name: postgres-db
#     restart: always
#     volumes:
#       - db-data:/var/lib/postgresql/data
#       # - ./initdb.d:/docker-entrypoint-initdb.d
#       # - ./pg_hba.conf:/var/lib/postgresql/data/pg_hba.conf
#     environment:
#       - POSTGRES_DB=${DB_NAME}
#       - POSTGRES_USER=${DB_USER}
#       - POSTGRES_PASSWORD=${DB_PASSWORD}
#       - POSTGRES_HOST_AUTH_METHOD=md5
#       - POSTGRES_INITDB_ARGS=--auth=md5
#     logging: *default-logging
#     network_mode: "host"
#     env_file:
#       - .env

# volumes:
#   db-data:    
#     depends_on:
#       - postgres_db

#   postgres_db:
#     image: postgres:16.3
#     container_name: postgres-db
#     restart: always
#     volumes:
#       - db-data:/var/lib/postgresql/data
#       # - ./initdb.d:/docker-entrypoint-initdb.d
#       # - ./pg_hba.conf:/var/lib/postgresql/data/pg_hba.conf
#     environment:
#       - POSTGRES_DB=${DB_NAME}
#       - POSTGRES_USER=${DB_USER}
#       - POSTGRES_PASSWORD=${DB_PASSWORD}
#       - POSTGRES_HOST_AUTH_METHOD=md5
#       - POSTGRES_INITDB_ARGS=--auth=md5
#     logging: *default-logging
#     network_mode: "host"
#     env_file:
#       - .env

# volumes:
#   db-data:    
